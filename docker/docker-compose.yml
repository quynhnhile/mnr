version: '3.9'

services:
  api:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile
      target: production
    container_name: api
    ports:
      - 3001:3000
    env_file:
      - ./.env.production.docker
    depends_on:
      - elasticsearch
      - postgres
    networks:
      - mnr

  postgres:
    container_name: postgres
    image: postgres:alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      POSTGRES_DB: 'MNR'
    volumes:
      - mnr-postgres:/var/lib/postgresql/data
    networks:
      - mnr

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - 5050:80
    networks:
      - mnr

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - xpack.security.enabled=false
      - 'discovery.type=single-node'
    ports:
      - 9200:9200
    expose:
      - 9200:9200

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.14.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    # volumes:
    # - ./kibana.yml:/opt/kibana/config/kibana.yml

networks:
  mnr:
    driver: bridge

volumes:
  mnr-postgres:
